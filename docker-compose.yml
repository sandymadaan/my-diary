version : "3"
services:
  my-diary-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: my-diary-api
    depends_on:
      - my-diary-pg
    volumes:
      - .:/var/www/html
    restart: always
    ports:
      - "2234:80"
    environment:
      APP_NAME: 'F+L my-diary Boilerplate'
      APP_DEBUG: 'true'
      APP_URL: 'http://220.233.1.1'
      DB_CONNECTION: 'pgsql'
      XDEBUG_ENABLED: 1
      XDEBUG_REMOTE_AUTOSTART: 1
      XDEBUG_MAXNESTING_LEVEL: 1000
      XDEBUG_REMOTE_CONNECT_BACK: 1
      XDEBUG_REMOTE_HOST: host.docker.internal
      XDEBUG_REMOTE_PORT: 9003
    extra_hosts:
      - "host.docker.internal:220.233.1.1"
    networks:
      my-diary-api-network:
        ipv4_address: 220.233.1.1
  
  my-diary-pg:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: test_db
    container_name: my-diary-pg
    volumes:
      - my-diary-pg-disk:/var/lib/postgres
    networks:
      my-diary-api-network:
        ipv4_address: 220.233.1.2

  my-diary_elastic_search:
    image: elasticsearch:7.10.1
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
    - 7200:9200
    networks:
      my-diary-api-network:
        ipv4_address: 220.233.1.3

# On-disk storage of DB data, when containers are stopped/removed
volumes:
  my-diary-pg-disk: {}
  elasticsearch_data: {}

# Local network for services running using this docker-compose config
networks:
  my-diary-api-network:
    ipam:
      driver: default
      config:
        - subnet: 220.233.0.0/16
